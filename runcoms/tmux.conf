set-option -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix

#######################################
# # for previous and next window

# bind-key -n C-v next-window
# bind-key -n C-z previous-window

# bind-key v send-keys C-v
# bind-key z send-keys C-z


# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window


#######################################

# switch panes using Alt-arrow without prefix

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|tmux)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# bind -n M-Left run "($is_vim && tmux send-keys C-H) || \
#                  tmux select-pane -L"
# 
# bind -n M-Down run "($is_vim && tmux send-keys C-J)  || \
#                  ($is_fzf && tmux send-keys C-j) || \
#                  tmux select-pane -D"
# 
# bind -n M-Up run "($is_vim && tmux send-keys C-K) || \
#                  ($is_fzf && tmux send-keys C-k)  || \
#                  tmux select-pane -U"
# 
# bind -n M-Right run "($is_vim && tmux send-keys C-R) || \
#                  tmux select-pane -R"
# 
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# bind-key -n M-Left if-shell "$is_vim" "send-keys S-C-H"  "select-pane -L"
# bind-key -n M-Down if-shell "$is_vim" "send-keys S-C-J"  "select-pane -D"
# bind-key -n M-Up if-shell "$is_vim" "send-keys S-C-K"  "select-pane -U"
# bind-key -n M-Right if-shell "$is_vim" "send-keys S-C-L"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi M-Left select-pane -L
# bind-key -T copy-mode-vi M-Down select-pane -D
# bind-key -T copy-mode-vi M-Up select-pane -U
# bind-key -T copy-mode-vi M-Right select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l


set -g base-index 1
set -s escape-time 0
setw -g aggressive-resize on
set-option -g history-limit 90000

setw -g automatic-rename on

set -g mouse off

bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'


# These bindings (^B + and ^B -) are a “zoom” feature. Focused on a given pane, ^B + will promote 
# the pane to be its own window. Then you can do OS-native mark and copy all you want, 
# no panes to worry about. When you’re done, just use ^B - to turn the window back into a pane, right where it was before.

unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom

set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle 

# xterm keys ctrl arrow keys
set-window-option -g xterm-keys on

set -g @continuum-restore 'off'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'tmux-plugins/tmux-sidebar'

# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# run '~/.tmux/plugins/tpm/tpm'

